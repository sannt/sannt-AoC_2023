метод ВходныеДанные(): Строка //Массив<Строка>
    знч Файл = новый Файл("input.txt")
    исп Поток = Файл.ОткрытьПотокЧтения()
    //возврат Поток.ПрочитатьКакСтроку().ПолучитьСтроки()
    возврат Поток.ПрочитатьКакСтроку()
;

структура Карта
    знч МатрицаЗначений: Массив<Массив<Число>>

    метод Инициализировать(ИмяКарты: Строка, ВходныеДанные: Строка)
        МатрицаЗначений.Очистить()
        знч МассивСтрок = ВходныеДанные.ПолучитьСтроки()
        пер Индекс = МассивСтрок.Найти(ИмяКарты) + 1
        пока Индекс > 0
            знч Строка = МассивСтрок.Граница() < Индекс ? "" : МассивСтрок[Индекс]
            если Строка.Пусто()
                Индекс = 0
            иначе
                знч СтрокаМатрицы: Массив<Число>
                для Номер из Строка.Разделить(" ")
                    СтрокаМатрицы.Добавить(новый Число(Номер.Сократить()))
                ;
                МатрицаЗначений.Добавить(СтрокаМатрицы)
                Индекс += 1
            ;
        ;
    ;
    метод НачалоНазначения(ИндексСтроки: Число): Число
        возврат МатрицаЗначений[ИндексСтроки][0]
    ;
    метод НачалоИсточника(ИндексСтроки: Число): Число
        возврат МатрицаЗначений[ИндексСтроки][1]
    ;
    метод Смещение(ИндексСтроки: Число): Число
        возврат МатрицаЗначений[ИндексСтроки][2]
    ;
    метод КонецНазначения(ИндексСтроки: Число): Число
        возврат НачалоНазначения(ИндексСтроки) + Смещение(ИндексСтроки)
    ;
    метод КонецИсточника(ИндексСтроки: Число): Число
        возврат НачалоИсточника(ИндексСтроки) + Смещение(ИндексСтроки)
    ;
    метод НомерНазначения(НомерИсточника: Число): Число
        пер Результат = НомерИсточника
        для НомерСтроки = 0 по МатрицаЗначений.Граница()
            знч Диапазон = новый Диапазон<Число>(НачалоИсточника(НомерСтроки), КонецИсточника(НомерСтроки))
            если Диапазон.Содержит(НомерИсточника)
                Результат = НачалоНазначения(НомерСтроки) + НомерИсточника - НачалоИсточника(НомерСтроки)
            ;
        ;
        возврат Результат
    ;
;

метод ГенераторКарт(ВходныеДанные: Строка): Массив<Карта>

    знч Результат: Массив<Карта>

    знч КартаПочвы = новый Карта()
    КартаПочвы.Инициализировать("seed-to-soil map:", ВходныеДанные)
    Результат.Добавить(КартаПочвы)

    знч КартаУдобрений = новый Карта()
    КартаУдобрений.Инициализировать("soil-to-fertilizer map:", ВходныеДанные)
    Результат.Добавить(КартаУдобрений)

    знч КартаВоды = новый Карта()
    КартаВоды.Инициализировать("fertilizer-to-water map:", ВходныеДанные)
    Результат.Добавить(КартаВоды)

    знч КартаОсвещения = новый Карта()
    КартаОсвещения.Инициализировать("water-to-light map:", ВходныеДанные)
    Результат.Добавить(КартаОсвещения)

    знч КартаТемпературы = новый Карта()
    КартаТемпературы.Инициализировать("light-to-temperature map:", ВходныеДанные)
    Результат.Добавить(КартаТемпературы)

    знч КартаВлажности = новый Карта()
    КартаВлажности.Инициализировать("temperature-to-humidity map:", ВходныеДанные)
    Результат.Добавить(КартаВлажности)

    знч КартаМестоположения = новый Карта()
    КартаМестоположения.Инициализировать("humidity-to-location map:", ВходныеДанные)
    Результат.Добавить(КартаМестоположения)

    возврат Результат

;

метод Скрипт()

    пер РезультатПервойЧасти: Число
    пер РезультатВторойЧасти: Число

    знч ВходныеДанные = ВходныеДанные()

    знч Карты = ГенераторКарт(ВходныеДанные)

    знч Семена = '([\d\s]+)'.НайтиСовпадения(ВходныеДанные.ПолучитьСтроки().Первый()).Первый().Значение().Разделить(" ")

    для НомерСемени из Семена
        пер НомерНазначения = новый Число(НомерСемени.Сократить())
        для Карта из Карты
            НомерНазначения = Карта.НомерНазначения(НомерНазначения)
        ;
        РезультатПервойЧасти = РезультатПервойЧасти == 0? НомерНазначения : Мин(РезультатПервойЧасти, НомерНазначения)
    ;

    Консоль.Записать("Результат первой части: %РезультатПервойЧасти")
    Консоль.Записать("Результат второй части: %РезультатВторойЧасти")

;